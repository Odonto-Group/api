name: Node.js CI

on:
  push:
    branches: [ sandbox ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: yarn list

      - name: Build artifacts
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'
      - run: yarn install --non-interactive
      - run: node ace build --production --ignore-ts-errors
      - run: |
          cd build
          yarn install --production --non-interactive
          tar cf ../develop-artifact.tar .
          cd ..
          # NPM nÃ£o efetua copia do diretorio email para build
          tar r -f develop-artifact.tar email/

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-folder
          path: |
            *.tar
            .env*
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-folder

      - name: Display structure of downloaded files
        run: ls
        working-directory: ./

      - name: Deploy to Staging server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-avz"
          SOURCE: ""
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /home/apiv2/dev.apiv2.odontogroup.com.br/www/build
          EXCLUDE: ""
          SCRIPT_BEFORE: ""
          SCRIPT_AFTER: |
            echo $RSYNC_STDOUT
            cd /home/apiv2/dev.apiv2.odontogroup.com.br/www/build
            pwd
            tar xfv develop-artifact.tar > deploy_log.txt 2>&1
            rm -rf develop-artifact.tar
            cp .env.sand .env
            screen -XS api-dev quit
            yarn install --production --non-interactive >> deploy_log.txt 2>&1
            screen -SL api-dev -dm forever start server.js >> deploy_log.txt 2>&1
